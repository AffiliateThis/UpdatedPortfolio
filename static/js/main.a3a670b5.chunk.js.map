{"version":3,"sources":["Components/landingpage.js","Components/aboutme.js","Components/contact.js","Components/projects.js","Components/resume.js","Components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","alt","href","rel","target","aria-hidden","Component","AboutMe","Contact","Projects","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeTab","shadow","minWidth","color","height","background","border","colored","name","_this2","onChange","tabId","setState","ripple","toggleCategories","Resume","Main","react_router","exact","path","component","components","App","title","scroll","react_router_dom","to","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0MAuDeA,mLAlDX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAU,gBACdP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACTR,EAAAC,EAAAC,cAAA,OACEO,IAAI,4FACJC,IAAI,SACJH,UAAU,eAEZP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yEAGAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBAEbP,EAAAC,EAAAC,cAAA,KACES,KAAK,0CACLC,IAAI,sBACJC,OAAO,UAEPb,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwBO,cAAY,UAGnDd,EAAAC,EAAAC,cAAA,KACES,KAAK,mCACLC,IAAI,sBACJC,OAAO,UAEPb,EAAAC,EAAAC,cAAA,KAAGK,UAAU,sBAAsBO,cAAY,sBAhCvCC,aCSXC,mLARX,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAJca,aCUPE,mLARX,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAJca,aCkMPG,cApLb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,UAAW,GAFTR,kFAKjB,OAA6B,IAAzBG,KAAKI,MAAMC,UAEX5B,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMuB,OAAQ,EAAG1B,MAAO,CAAE2B,SAAU,MAAOzB,OAAQ,SACjDL,EAAAC,EAAAC,cAACI,EAAA,UAAD,CACEH,MAAO,CACL4B,MAAO,OACPC,OAAQ,QACRC,WACE,mIAINjC,EAAAC,EAAAC,cAACI,EAAA,SAAD,iXAQAN,EAAAC,EAAAC,cAACI,EAAA,YAAD,CAAa4B,QAAM,GACjBlC,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,iDACLE,OAAO,UAHT,UAOAb,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,yCACLE,OAAO,UAHT,OAOAb,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQ6B,SAAO,EAACxB,KAAK,yBAAyBE,OAAO,UAArD,aAIFb,EAAAC,EAAAC,cAACI,EAAA,SAAD,CAAUH,MAAO,CAAE4B,MAAO,SACxB/B,EAAAC,EAAAC,cAACI,EAAA,WAAD,CAAY8B,KAAK,YAIW,IAAzBb,KAAKI,MAAMC,UAElB5B,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMuB,OAAQ,EAAG1B,MAAO,CAAE2B,SAAU,MAAOzB,OAAQ,SACjDL,EAAAC,EAAAC,cAACI,EAAA,UAAD,CACEH,MAAO,CACL4B,MAAO,OACPC,OAAQ,QACRC,WACE,gIAINjC,EAAAC,EAAAC,cAACI,EAAA,SAAD,mWAQAN,EAAAC,EAAAC,cAACI,EAAA,YAAD,CAAa4B,QAAM,GACjBlC,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,0CACLE,OAAO,UAHT,UAOAb,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,8CACLE,OAAO,UAHT,OAOAb,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,gCACLE,OAAO,UAHT,aAQFb,EAAAC,EAAAC,cAACI,EAAA,SAAD,CAAUH,MAAO,CAAE4B,MAAO,SACxB/B,EAAAC,EAAAC,cAACI,EAAA,WAAD,CAAY8B,KAAK,YAMW,IAAzBb,KAAKI,MAAMC,UAElB5B,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMuB,OAAQ,EAAG1B,MAAO,CAAE2B,SAAU,MAAOzB,OAAQ,SACjDL,EAAAC,EAAAC,cAACI,EAAA,UAAD,CACEH,MAAO,CACL4B,MAAO,OACPC,OAAQ,QACRC,WACE,wIAINjC,EAAAC,EAAAC,cAACI,EAAA,SAAD,wRAOAN,EAAAC,EAAAC,cAACI,EAAA,YAAD,CAAa4B,QAAM,GACjBlC,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,0CACLE,OAAO,UAHT,UAOAb,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,8CACLE,OAAO,UAHT,OAOAb,EAAAC,EAAAC,cAACI,EAAA,OAAD,CACE6B,SAAO,EACPxB,KAAK,gCACLE,OAAO,UAHT,aAQFb,EAAAC,EAAAC,cAACI,EAAA,SAAD,CAAUH,MAAO,CAAE4B,MAAO,SACxB/B,EAAAC,EAAAC,cAACI,EAAA,WAAD,CAAY8B,KAAK,YAIW,IAAzBb,KAAKI,MAAMC,UAElB5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCAHC,mCAQA,IAAAmC,EAAAd,KACP,OACEvB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACbP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CACEsB,UAAWL,KAAKI,MAAMC,UACtBU,SAAU,SAAAC,GAAK,OAAIF,EAAKG,SAAS,CAAEZ,UAAWW,KAC9CE,QAAM,GAENzC,EAAAC,EAAAC,cAACI,EAAA,IAAD,cAEAN,EAAAC,EAAAC,cAACI,EAAA,IAAD,gBACAN,EAAAC,EAAAC,cAACI,EAAA,IAAD,oBAGFN,EAAAC,EAAAC,cAAA,WAASK,UAAU,iBACjBP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAU,iBACdP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACTR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WAAWgB,KAAKmB,+BA5KtB3B,aCHR4B,mLARX,OACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BAJaa,aCgBN6B,EAVF,kBACX5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjCC,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWhC,IAClChB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAW/B,IAClCjB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAW9B,IACnClB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOE,KAAK,UAAUE,WAAYN,cC+BvBO,mLApCX,OACElD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAACI,EAAA,OAAD,KAKEN,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAU,eAAe4C,MAAM,QAAQC,QAAM,GAEnDpD,EAAAC,EAAAC,cAACI,EAAA,WAAD,KAEEN,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,WAAT,UACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,YAAT,YACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJtD,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQ6C,MAAM,SACZnD,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,WAAT,UACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,YAAT,YACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJtD,EAAAC,EAAAC,cAACI,EAAA,QAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACfP,EAAAC,EAAAC,cAACqD,EAAD,OAEFvD,EAAAC,EAAAC,cAACI,EAAA,QAAD,eA/BQS,aCKEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yECTNC,IAASC,OACP9D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAAC6D,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3a670b5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Grid className=\"landing-grid\">\r\n          <Cell col={12}>\r\n            <img\r\n              src=\"https://cdn4.iconfinder.com/data/icons/avatars-21/512/avatar-circle-human-male-3-512.png \"\r\n              alt=\"avatar\"\r\n              className=\"avatar-img\"\r\n            />\r\n            <div className=\"banner-text\">\r\n              <h1>Full Stack Web Developer</h1>\r\n              <hr />\r\n              <p>\r\n                HTML |CSS | Node.JS | JavaScript | React | Express | MongoDB\r\n              </p>\r\n              <div className=\"social-links\">\r\n                {/* LinkedIn */}\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/chriskautz/\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                </a>\r\n                {/* Github */}\r\n                <a\r\n                  href=\"https://github.com/AffiliateThis\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                </a>\r\n                {/* maybe stackoverflow or something like that */}\r\n\r\n                {/* <a\r\n                  href=\"http://google.com\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                </a> */}\r\n              </div>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>AboutMe </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> Contact</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Cell,\r\n  Card,\r\n  CardTitle,\r\n  CardActions,\r\n  CardText,\r\n  Button,\r\n  CardMenu,\r\n  IconButton\r\n} from \"react-mdl\";\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: 0 };\r\n  }\r\n  toggleCategories() {\r\n    if (this.state.activeTab === 0) {\r\n      return (\r\n        <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n          <CardTitle\r\n            style={{\r\n              color: \"#fff\",\r\n              height: \"176px\",\r\n              background:\r\n                \"url(https://res.cloudinary.com/dtd8cnede/image/upload/v1564031881/relay%20estimator/chart_screenshot_ooamkj.png) center/cover\"\r\n              // \"url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISAPF8vrQ6xvb0zExOUS00ZB_KFeIi2UiC5ZkWvWzveIO0wATsQ) center / cover\"\r\n            }}\r\n          />\r\n          <CardText>\r\n            In this project, the team created an app that helps\r\n            designers/developers provide cost estimates/forecasts based on each\r\n            task per project. Once a project is added, the total cost of each\r\n            task is calculated, based on the estimated hrs of completion and\r\n            cost per hour. A Doughnut Chart beautifully displays tasks based on\r\n            the value and sums up the project total..\r\n          </CardText>\r\n          <CardActions border>\r\n            <Button\r\n              colored\r\n              href=\"https://github.com/jmschindele/group_project_3\"\r\n              target=\"_blank\"\r\n            >\r\n              Github\r\n            </Button>\r\n            <Button\r\n              colored\r\n              href=\"https://salty-reef-43633.herokuapp.com\"\r\n              target=\"_blank\"\r\n            >\r\n              URL\r\n            </Button>\r\n            <Button colored href=\"http://bit.ly/2Ydgk2n \" target=\"_blank\">\r\n              LiveDemo\r\n            </Button>\r\n          </CardActions>\r\n          <CardMenu style={{ color: \"#fff\" }}>\r\n            <IconButton name=\"share\" />\r\n          </CardMenu>\r\n        </Card>\r\n      );\r\n    } else if (this.state.activeTab === 1) {\r\n      return (\r\n        <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n          <CardTitle\r\n            style={{\r\n              color: \"#fff\",\r\n              height: \"176px\",\r\n              background:\r\n                \"url(https://res.cloudinary.com/dtd8cnede/image/upload/v1564061377/relay%20estimator/trailtracker5_eyjpze.png) center/cover\"\r\n              // \"url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISAPF8vrQ6xvb0zExOUS00ZB_KFeIi2UiC5ZkWvWzveIO0wATsQ) center / cover\"\r\n            }}\r\n          />\r\n          <CardText>\r\n            Trail Tracker is a web application designed for the hiking\r\n            enthusiast who wants to commemorate their hiking experiences. The\r\n            user only needs to sign up by creating a username and password to\r\n            begin. Once the user has signed up, they are able to create as many\r\n            blog posts as they want and are only limited by the number of hikes\r\n            that they complete!\r\n          </CardText>\r\n          <CardActions border>\r\n            <Button\r\n              colored\r\n              href=\"https://github.com/millhousenm/Project2\"\r\n              target=\"_blank\"\r\n            >\r\n              Github\r\n            </Button>\r\n            <Button\r\n              colored\r\n              href=\"https://floating-refuge-62057.herokuapp.com\"\r\n              target=\"_blank\"\r\n            >\r\n              URL\r\n            </Button>\r\n            <Button\r\n              colored\r\n              href=\"https://youtu.be/3E7jdG1uMA8 \"\r\n              target=\"_blank\"\r\n            >\r\n              LiveDemo\r\n            </Button>\r\n          </CardActions>\r\n          <CardMenu style={{ color: \"#fff\" }}>\r\n            <IconButton name=\"share\" />\r\n          </CardMenu>\r\n        </Card>\r\n      );\r\n\r\n      // );\r\n    } else if (this.state.activeTab === 2) {\r\n      return (\r\n        <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n          <CardTitle\r\n            style={{\r\n              color: \"#fff\",\r\n              height: \"176px\",\r\n              background:\r\n                \"url(https://res.cloudinary.com/dtd8cnede/image/upload/v1564067843/relay%20estimator/BOAT_Systems_Demo_pic_mozhto.png) center/cover\"\r\n              // \"url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISAPF8vrQ6xvb0zExOUS00ZB_KFeIi2UiC5ZkWvWzveIO0wATsQ) center / cover\"\r\n            }}\r\n          />\r\n          <CardText>\r\n            In this project, the team created an app that acts as a movable\r\n            bridge operation training simulator. Many times there are costly\r\n            repairs that must be administered for improperly operating a movable\r\n            bridge. This simulator provides a model of the steps for bridge\r\n            movement.\r\n          </CardText>\r\n          <CardActions border>\r\n            <Button\r\n              colored\r\n              href=\"https://github.com/millhousenm/Project2\"\r\n              target=\"_blank\"\r\n            >\r\n              Github\r\n            </Button>\r\n            <Button\r\n              colored\r\n              href=\"https://floating-refuge-62057.herokuapp.com\"\r\n              target=\"_blank\"\r\n            >\r\n              URL\r\n            </Button>\r\n            <Button\r\n              colored\r\n              href=\"https://youtu.be/3E7jdG1uMA8 \"\r\n              target=\"_blank\"\r\n            >\r\n              LiveDemo\r\n            </Button>\r\n          </CardActions>\r\n          <CardMenu style={{ color: \"#fff\" }}>\r\n            <IconButton name=\"share\" />\r\n          </CardMenu>\r\n        </Card>\r\n      );\r\n    } else if (this.state.activeTab === 3) {\r\n      return (\r\n        <div>\r\n          <h1>This is JavaScript</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"category-tabs\">\r\n        <Tabs\r\n          activeTab={this.state.activeTab}\r\n          onChange={tabId => this.setState({ activeTab: tabId })}\r\n          ripple\r\n        >\r\n          <Tab>React</Tab>\r\n          {/* <Tab>Mongodb</Tab> */}\r\n          <Tab>Express</Tab>\r\n          <Tab>Javascript</Tab>\r\n        </Tabs>\r\n\r\n        <section className=\"projects-grid\">\r\n          <Grid className=\"projects-grid\">\r\n            <Cell col={12}>\r\n              <div className=\"content\">{this.toggleCategories()}</div>\r\n            </Cell>\r\n          </Grid>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Resume</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LandingPage from \"./landingpage\";\r\nimport AboutMe from \"./aboutme\";\r\nimport Contact from \"./contact\";\r\nimport Projects from \"./projects\";\r\nimport Resume from \"./resume\";\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={LandingPage} />\r\n    <Route path=\"/aboutme\" component={AboutMe} />\r\n    <Route path=\"/contact\" component={Contact} />\r\n    <Route path=\"/projects\" component={Projects} />\r\n    <Route path=\"/resume\" components={Resume} />\r\n  </Switch>\r\n);\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\n// import * as ReactMDL from 'react-mdl';\nimport \"./app.css\";\nimport Main from \"./Components/main\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout\n        // style={{\n        //   background: \"url(https://res.cloudinary.com/dtd8cnede/image/upload/v1563557007/IMG_20190527_134509_v8flg8.jpg) center / cover\"\n        // }}\n        >\n          <Header className=\"header-color\" title=\"Title\" scroll>\n            {/* // transparent title=\"Title\" style={{ color: \"white\" }}> */}\n            <Navigation>\n              {/* <Link to=\"/home\">Home</Link> */}\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/aboutme\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/aboutme\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n          <Content />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}